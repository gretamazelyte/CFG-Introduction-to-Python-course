
    
# Output the sale for one month (price * quantity)

def monthly_sales_counter(database, month):
    month_data = database[month]
    total_monthly = 0.0
    for row in month_data:
        total_monthly += int(row['Quantity Ordered']) * float(row['Price Each'])
    return total_monthly
    
month = input('Which total monthly sales data would you like to see? ')
total_monthly = monthly_sales_counter(database, month)
print('Total sales for {} are {}'.format(month, round(total_monthly, 2)))

# Output the total sale = for the whole year

def yearly_sales_counter(database):
    total_yearly = 0.0
    for month in list(database.keys()):
        month_data = database[month]
        total_monthly = 0.0
        for row in month_data:
            total_monthly += int(row['Quantity Ordered']) * float(row['Price Each'])
        total_yearly += total_monthly
    return total_yearly
    
total_yearly = yearly_sales_counter(database)
print('Total yearly sales are {}'.format(round(total_yearly, 2)))

# The most expensive/cheapest product

def most_expensive_product(database):
    highest_price = 0.0
    for month in list(database.keys()):
        month_data = database[month]
        for row in month_data:
            if highest_price < float(row['Price Each']):
                highest_price = float(row['Price Each'])
                highest_price_item = row['Product']
    return highest_price_item, highest_price
highest_price_item, highest_price = most_expensive_product(database)
print('The most expensive product sold is {} which costs {}$.'.format(highest_price_item, highest_price))

def cheapest_product(database):
    firstProduct = True
    for month in list(database.keys()):
        month_data = database[month]
        for row in month_data:
            if firstProduct:
                lowest_price = float(row['Price Each'])
                lowest_price_item = row['Product']
                firstProduct = False
            elif lowest_price > float(row['Price Each']):
                lowest_price = float(row['Price Each'])
                lowest_price_item = row['Product']
    return lowest_price_item, lowest_price
    
lowest_price_item, lowest_price = cheapest_product(database)
print('The cheapest product sold is {} which costs {}$.'.format(lowest_price_item, lowest_price))

# Which product was sold the most across each month/the year

def best_seller_month(database, month):
    item_quantities = {}
    month_data = database[month]
    highest_quantity = 0
    for row in month_data:
        if row['Product'] in item_quantities.keys():
            item_quantities[row['Product']] += int(row['Quantity Ordered'])
        else:
            item_quantities[row['Product']] = int(row['Quantity Ordered'])
    for item in list(item_quantities.keys()):
        if highest_quantity < int(item_quantities[item]):
            highest_quantity = int(item_quantities[item])
            highest_quantity_item = item
    return highest_quantity_item, highest_quantity
    
month = input('Which month would you like to see? ')
highest_quantity_item_month, highest_quantity_month = best_seller_month(database, month)
print('The most sold item in {} is {}. Quantity sold is {}'.format(month, highest_quantity_item_month, highest_quantity_month))

def best_seller_year(database):
    item_quantities ={}
    highest_quantity = 0
    for month in list(database.keys()):
       month_data = database[month]
       for row in month_data:
           if row['Product'] in item_quantities.keys():
               item_quantities[row['Product']] += int(row['Quantity Ordered'])
           else:
               item_quantities[row['Product']] = int(row['Quantity Ordered'])
       for item in list(item_quantities.keys()):
           if highest_quantity < int(item_quantities[item]):
               highest_quantity = int(item_quantities[item])
               highest_quantity_item = item
    return highest_quantity_item, highest_quantity
    
highest_quantity_item_year, highest_quantity_year = best_seller_year(database)
print('The most sold item in 2019 is {}. Quantity sold is {}'.format( highest_quantity_item_year, highest_quantity_year))
